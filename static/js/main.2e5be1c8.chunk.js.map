{"version":3,"sources":["Components/SummaryData/DataContainers.jsx","Components/DataTable/dataTable.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DataContainers","state","loading","global","country","fetch","response","json","data","response2","data2","countrydata","i","length","countryCode","toString","push","console","log","this","setState","Fragment","className","id","confirmed","recovered","deaths","Component","dataTable","props","content","uniqueData","date","dateAsOf","split","time","timeAsOf","countryName","TableContainer","component","Paper","Table","aria-label","style","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","App","width","height","backgroundColor","Grid","container","justify","display","position","item","xs","spacing","padding","textAlign","color","margin","boxShadow","Typography","variant","alignContent","Alert","severity","AlertTitle","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e5be1c8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Paper, Typography, Grid} from \"@material-ui/core\";\r\nimport './DataContainers.css';\r\n\r\nclass DataContainers extends Component{\r\n\r\n    state = {\r\n        loading: true,\r\n        global: null,\r\n        country: null,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        // FETCH GLOBAL DATA\r\n        const url = \"https://api.coronatracker.com/v2/stats\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        // this.setState({ global: data, loading: false });\r\n\r\n\r\n        // FETCH COUNTRY SUMMARY\r\n        const urlCountries = \"https://api.coronatracker.com/v2/analytics/country\";\r\n        const response2 = await fetch(urlCountries);\r\n        var data2 = await response2.json();\r\n        var Names = [];\r\n        var uniqueData = [];\r\n\r\n        const countrydata = [];\r\n        //console.log(\"REACHED!!\");\r\n        if(data2) {\r\n            for (let i = 0; i < data2.length; i++) {\r\n                if (data2[i].countryCode.toString() === \"CN\" ||\r\n                    data2[i].countryCode.toString() === \"US\" ||\r\n                    data2[i].countryCode.toString() === \"IN\" ||\r\n                    data2[i].countryCode.toString() === \"IT\") {\r\n                    //console.log(\"DONE!!\");\r\n                    countrydata.push(data2[i]);\r\n                }\r\n            }\r\n            console.log(countrydata);\r\n            this.setState({global: data, country: countrydata, loading: false});\r\n        }\r\n    }\r\n\r\n    async getGlobalData() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.loading) return <div>Loading...</div>;\r\n        if (this.state.loading) return <div>didn't get the Data</div>;\r\n\r\n        console.log(this.state.global);\r\n        return (\r\n            <React.Fragment>\r\n                {/*GLOBAL DATA*/}\r\n                <div className={\"box-container-global\"}>\r\n                    <div className={\"title-container-global\"}>\r\n                        <div className={\"title\"}>GLOBAL</div>\r\n                    </div>\r\n                    <div className={\"data-container-global\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.global.confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container-global\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.global.recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container-global\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.global.deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*CHINA DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>CHINA</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.country[0].confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.country[0].recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.country[0].deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*ITALY DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>ITALY</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.country[1].confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.country[1].recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.country[1].deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*USA DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>USA</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"}>Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.country[2].confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.country[2].recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.country[2].deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>INDIA</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"}>Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.country[3].confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.country[3].recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.country[3].deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataContainers;","import React, {Component} from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport './dataTable.css';\r\n\r\n\r\nclass dataTable extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        loading: true,\r\n        content: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        //COUNTRY DATA\r\n        const url = \"https://api.coronatracker.com/v2/analytics/country\";\r\n        const response = await fetch(url);\r\n        let data = await response.json();\r\n        let uniqueData = [];\r\n        console.log(data);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            let date = data[i].dateAsOf.split(\"T\")[0];\r\n            let time = data[i].dateAsOf.split(\"T\")[1];\r\n            data[i].dateAsOf = date;\r\n            data[i].timeAsOf = time;\r\n            uniqueData.push(data[i]);\r\n        }\r\n\r\n        console.log(uniqueData);\r\n\r\n        this.setState({content: data, loading: false });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.loading) return <div>Loading...</div>;\r\n        if (this.state.loading) return <div>didn't get the Data</div>;\r\n        console.log(this.state.content[1].countryName);\r\n        return (\r\n            <div className={\"datatable-table\"}>\r\n                <TableContainer className={\"datatable\"} component={Paper}>\r\n                    <Table aria-label=\"simple table\" style={{minWidth: \"650\"}}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Country</TableCell>\r\n                                <TableCell align=\"right\">Confirmed</TableCell>\r\n                                <TableCell align=\"right\">Deaths</TableCell>\r\n                                <TableCell align=\"right\">Recovered</TableCell>\r\n                                <TableCell align=\"right\">Last Updated Date</TableCell>\r\n                                <TableCell align=\"right\">Last Updated Time</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.content.map(row => (\r\n                                <TableRow key={row.countryName}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.countryName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row[\"confirmed\"]}</TableCell>\r\n                                    <TableCell id={\"deaths\"} align=\"right\">{row[\"deaths\"]}</TableCell>\r\n                                    <TableCell id={\"recovered\"} align=\"right\">{row[\"recovered\"]}</TableCell>\r\n                                    <TableCell align=\"right\">{row[\"dateAsOf\"]}</TableCell>\r\n                                    <TableCell align=\"right\">{row[\"timeAsOf\"]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n\r\n    };\r\n}\r\nexport default dataTable;\r\n","import React, {Component} from 'react';\nimport {Grid, Paper, Typography} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport './App.css';\nimport DataContainer from \"./Components/SummaryData/DataContainers\";\nimport DataTable from \"./Components/DataTable/dataTable\";\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div className={\"main\"} style={{width: \"100%\", height: \"100%\", backgroundColor: \"white\"}} >\n          <Grid container justify={\"center\"} style={{display: \"flex\", position: \"relative\"}}>\n            <Grid item xs={12} container spacing={0} justify={\"center\"}>\n              <Grid item xs={12} style={{backgroundColor: \"#212529\"}}>\n                  <Paper style={{ padding: \"15px\",width: \"100%\", textAlign: \"center\",backgroundColor: \"#212529\", color: \"white\", margin: \"0\", boxShadow: \"3px 3px 9px rgba(0,0,0,0.3)\"}}>\n                    <Typography variant={\"h5\"}> Corona Virus (Covid-19) Outbreak of World </Typography>\n                  </Paper>\n              </Grid>\n                <div style={{width: \"100%\", alignContent: \"center\", padding: \"20px\"}}>\n                    <Alert severity=\"error\">\n                        <AlertTitle>Slow?</AlertTitle>\n                        There may be intermittent outage due to the high number\n                        of users. We are giving our best to keep up with this\n                        high demand. Sorry for Inconvenience.\n                    </Alert>\n                </div>\n              <Grid container item xs={10} justify={\"center\"} style={{margin: \"20px\", textAlign: \"center\", backgroundColor: \"white\"}} >\n                <DataContainer/>\n              </Grid>\n            </Grid>\n          </Grid>\n            <div className={\"datatable-title\"}>\n                <h2 className={\"datatable-header\"}>\n                    Confirmed Cases and Deaths by Country, Territory\n                </h2>\n            </div>\n          <div className={\"datatable-container\"}>\n            <DataTable/>\n          </div>\n          <div className={\"footer\"}>\n            <div className={\"footer-content\"}>\n              <div className={\"footer-title\"}>DISCLAIMER</div>\n              <div className={\"footer-data\"}>\n                  <a href={\"coronainworld\"} >coronainworld.com</a> is a privately owned website that\n                is not owned or operated by any state or federal government\n                agency. We have compiled these data using public information\n                available in National/Local Media and Information released by\n                State/Federal Agencies (CDC, DHS). Provided Information may not be\n                accurate. Please refer to CDC for any official information. contact\n                  us at <a href=\"mailto:coronainworld@gmail.com\" target=\"_top\">\n                  coronainworld@gmail.com</a> for any other inquiries.\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}