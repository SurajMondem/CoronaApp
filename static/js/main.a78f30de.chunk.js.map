{"version":3,"sources":["Components/SummaryData/DataContainers.jsx","Components/DataTable/dataTable.jsx","Components/Footer/footer.jsx","Pages/index.jsx","Pages/IndiaStats.jsx","Pages/UsaStats.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DataContainers","state","loading","global","country","fetch","response","json","data","response2","data2","countrydata","i","length","countryCode","toString","push","this","setState","CircularProgress","color","Fragment","className","id","confirmed","recovered","deaths","Component","dataTable","content","daily","uniqueData","date","dateAsOf","split","time","timeAsOf","substring","TableContainer","component","Paper","Table","aria-label","style","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","key","countryName","scope","footer","href","target","LandingPage","width","height","backgroundColor","Grid","container","justify","display","position","item","xs","spacing","padding","textAlign","margin","boxShadow","Typography","variant","alignContent","Alert","severity","AlertTitle","to","IndiaStats","indiaStates","top","left","float","regional","loc","UsaStats","UsaStates","StateName","death","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a78f30de.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport './DataContainers.css';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass DataContainers extends Component{\n\n    state = {\n        loading: true,\n        global: null,\n        country: null,\n    };\n\n    async componentDidMount() {\n        // FETCH GLOBAL DATA\n        const url = \"https://api.coronatracker.com/v2/stats\";\n        const response = await fetch(url);\n        const data = await response.json();\n        // this.setState({ global: data, loading: false });\n\n\n        // FETCH COUNTRY SUMMARY\n        const urlCountries = \"https://api.coronatracker.com/v2/analytics/country\";\n        const response2 = await fetch(urlCountries);\n        var data2 = await response2.json();\n\n        const countrydata = [];\n        if(data2) {\n            for (let i = 0; i < data2.length; i++) {\n                if (data2[i].countryCode.toString() === \"CN\" ||\n                    data2[i].countryCode.toString() === \"US\" ||\n                    data2[i].countryCode.toString() === \"IN\" ||\n                    data2[i].countryCode.toString() === \"IT\") {\n                    countrydata.push(data2[i]);\n                }\n            }\n            this.setState({global: data, country: countrydata, loading: false});\n        }\n    }\n\n    render() {\n        if (this.state.loading) return <CircularProgress color=\"secondary\" />;\n        if (this.state.loading) return <CircularProgress color=\"secondary\" />;\n\n        return (\n            <React.Fragment>\n                {/*GLOBAL DATA*/}\n                <div className={\"box-container-global\"}>\n                    <div className={\"title-container-global\"}>\n                        <div className={\"title\"}>GLOBAL</div>\n                    </div>\n                    <div className={\"data-container-global\"}>\n                        <div className={\"data-title\"} >Confirmed</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"confirmed\"}>\n                                {this.state.global.confirmed}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container-global\"}>\n                        <div className={\"data-title\"} >Recovered</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"recovered\"}>\n                                {this.state.global.recovered}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container-global\"}>\n                        <div className={\"data-title\"} >Deaths</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"deaths\"}>\n                                {this.state.global.deaths}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/*USA DATA*/}\n                <div className={\"box-container\"}>\n                    <div className={\"title-container\"}>\n                        <div className={\"title\"}>USA</div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"}>Confirmed</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"confirmed\"}>\n                                {this.state.country[2].confirmed}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Recovered</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"recovered\"}>\n                                {this.state.country[2].recovered}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Deaths</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"deaths\"}>\n                                {this.state.country[2].deaths}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/*INDIA DATA*/}\n                <div className={\"box-container\"}>\n                    <div className={\"title-container\"}>\n                        <div className={\"title\"}>INDIA</div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"}>Confirmed</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"confirmed\"}>\n                                {this.state.country[3].confirmed}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Recovered</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"recovered\"}>\n                                {this.state.country[3].recovered}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Deaths</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"deaths\"}>\n                                {this.state.country[3].deaths}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/*CHINA DATA*/}\n                <div className={\"box-container\"}>\n                    <div className={\"title-container\"}>\n                        <div className={\"title\"}>CHINA</div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Confirmed</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"confirmed\"}>\n                                {this.state.country[0].confirmed}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Recovered</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"recovered\"}>\n                                {this.state.country[0].recovered}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Deaths</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"deaths\"}>\n                                {this.state.country[0].deaths}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/*ITALY DATA*/}\n                <div className={\"box-container\"}>\n                    <div className={\"title-container\"}>\n                        <div className={\"title\"}>ITALY</div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Confirmed</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"confirmed\"}>\n                                {this.state.country[1].confirmed}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Recovered</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"recovered\"}>\n                                {this.state.country[1].recovered}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={\"data-container\"}>\n                        <div className={\"data-title\"} >Deaths</div>\n                        <div className={\"data-box\"}>\n                            <div className={\"data\"} id={\"deaths\"}>\n                                {this.state.country[1].deaths}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DataContainers;","import React, {Component} from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport './dataTable.css';\n\n\nclass dataTable extends Component {\n\n    state = {\n        loading: true,\n        content: [],\n        daily: []\n    };\n\n    async componentDidMount() {\n        //COUNTRY DATA\n        const url = \"https://api.coronatracker.com/v2/analytics/country\";\n        const response = await fetch(url);\n        let data = await response.json();\n        let uniqueData = [];\n\n        for(let i = 0; i < data.length; i++) {\n            let date = data[i].dateAsOf.split(\"T\")[0];\n            let time = data[i].dateAsOf.split(\"T\")[1];\n            data[i].dateAsOf = date;\n            data[i].timeAsOf = time.substring(0,5);\n            uniqueData.push(data[i]);\n        }\n\n        this.setState({content: data, loading: false });\n    }\n\n\n\n    render() {\n\n        if (this.state.loading) return <CircularProgress color=\"secondary\" />;\n        if (this.state.loading) return <CircularProgress color=\"secondary\" />;\n        return (\n            <div className={\"datatable-table\"}>\n                <TableContainer className={\"datatable\"} component={Paper}>\n                    <Table aria-label=\"simple table\" style={{minWidth: \"650\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Country</TableCell>\n                                <TableCell align=\"center\">Confirmed</TableCell>\n                                <TableCell align=\"center\">Deaths</TableCell>\n                                <TableCell align=\"center\">Recovered</TableCell>\n                                <TableCell align=\"right\">Last Updated Date</TableCell>\n                                <TableCell align=\"left\">Time (GMT)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.content.map(row => (\n                                <TableRow key={row.countryName}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.countryName}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row[\"confirmed\"]}</TableCell>\n                                    <TableCell id={\"deaths\"} align=\"center\">{row[\"deaths\"]}</TableCell>\n                                    <TableCell id={\"recovered\"} align=\"center\">{row[\"recovered\"]}</TableCell>\n                                    <TableCell align=\"right\">{row[\"dateAsOf\"]}</TableCell>\n                                    <TableCell align=\"left\">{row[\"timeAsOf\"]}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n\n    };\n}\nexport default dataTable;\n","import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst footer = () => {\r\n    return (\r\n        <div className={\"footer-content\"}>\r\n            <div className={\"footer-title\"}>DISCLAIMER</div>\r\n            <div className={\"footer-data\"}>\r\n                <a href={\"coronainworld\"} >coronainworld.com</a> is a privately owned website that\r\n                is not owned or operated by any state or federal government\r\n                agency. We have compiled these data using public information\r\n                available in National/Local Media and Information released by\r\n                State/Federal Agencies (CDC, DHS). Provided Information may not be\r\n                accurate. Please refer to CDC for any official information. contact\r\n                us at <a href=\"mailto:coronainworld@gmail.com\" target=\"_top\">\r\n                coronainworld@gmail.com</a> for any other inquiries.\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default footer;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\n\r\n//Components\r\nimport DataContainer from \"../Components/SummaryData/DataContainers\";\r\nimport DataTable from \"../Components/DataTable/dataTable\";\r\nimport Footer from \"../Components/Footer/footer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//CSS\r\nimport \"./index.css\";\r\n\r\nconst LandingPage = () => {\r\n    return(\r\n        <div className={\"main\"} style={{width: \"100%\", height: \"100%\", backgroundColor: \"white\"}} >\r\n            <Grid container justify={\"center\"} style={{display: \"flex\", position: \"relative\"}}>\r\n                 <Grid item xs={12} container spacing={0} justify={\"center\"}>\r\n                     <Grid item xs={12} style={{backgroundColor: \"#212529\"}}>\r\n                         <Paper style={{ padding: \"15px\",width: \"100%\", textAlign: \"center\",backgroundColor: \"#212529\", color: \"white\", margin: \"0\", boxShadow: \"3px 3px 9px rgba(0,0,0,0.3)\"}}>\r\n                             <Typography variant={\"h5\"} style={{display: \"inline-block\"}}> Corona Virus (Covid-19) Outbreak of World </Typography>\r\n                             <div style={{display: \"inline-block\"}}>\r\n                             </div>\r\n                         </Paper>\r\n                     </Grid>\r\n                     <div style={{width: \"100%\", alignContent: \"center\", padding: \"20px\"}}>\r\n                         <Alert severity=\"error\">\r\n                             <AlertTitle>Slow?</AlertTitle>\r\n                             There may be intermittent outage due to the high number\r\n                             of users. We are giving our best to keep up with this\r\n                             high demand. Sorry for Inconvenience.\r\n                         </Alert>\r\n                     </div>\r\n                     <Grid container item xs={10} justify={\"center\"} style={{margin: \"20px\", textAlign: \"center\", backgroundColor: \"white\"}} >\r\n                         <DataContainer/>\r\n                     </Grid>\r\n                     <div className={\"button-container\"}>\r\n                         <div className={\"button-title-container\"}>\r\n                             <div className={\"button-title\"}>STATE WISE DATA AVAILABLE</div>\r\n                         </div>\r\n                         <div className={\"button-groups\"}>\r\n                             <div className={\"button\"}>\r\n                                 <Link to={\"/stats/india\"}> INDIA </Link>\r\n                             </div>\r\n                         </div>\r\n                         <div className={\"button-groups\"}>\r\n                             <div className={\"button\"}>\r\n                                 <Link to={\"/stats/usa\"}> USA </Link>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </Grid>\r\n            </Grid>\r\n            <div className={\"datatable-title\"}>\r\n                <h2 className={\"datatable-header\"}>\r\n                    Confirmed Cases and Deaths by Country, Territory\r\n                </h2>\r\n            </div>\r\n            <div className={\"datatable-container\"}>\r\n                <DataTable/>\r\n            </div>\r\n            <div className={\"footer\"}>\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LandingPage;\r\n\r\n","import React, {Component} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n//CSS files\r\nimport \"../Components/SummaryData/DataContainers.css\";\r\nimport \"../App.css\";\r\nimport \"../Components/DataTable/dataTable.css\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Footer from \"../Components/Footer/footer\";\r\n\r\n\r\n\r\nclass IndiaStats extends Component{\r\n\r\n    state = {\r\n        loading: true,\r\n        indiaStates: null,\r\n        country: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        //FETCH INDIA SUMMARY\r\n        const urlindia = \"https://api.coronatracker.com/v2/analytics/country\";\r\n        const response2 = await fetch(urlindia);\r\n        var data2 = await response2.json();\r\n\r\n        const countrydata = [];\r\n        if (data2) {\r\n            for (let i = 0; i < data2.length; i++) {\r\n                if (data2[i].countryCode.toString() === \"IN\")\r\n                {\r\n                    countrydata.push(data2[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        //INDIAN STATES DATA\r\n        const url = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\n        const response = await fetch(url);\r\n        let data = await response.json();\r\n\r\n        this.setState({indiaStates: data, country: countrydata, loading: false});\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.loading) return <CircularProgress style={{position: \"fixed\", top: \"50%\", left:\"50%\" }} color=\"secondary\" />;\r\n        if (this.state.loading) return <CircularProgress style={{position: \"fixed\", top: \"50%\", left:\"50%\" }} color=\"secondary\" />;\r\n\r\n        return(\r\n            <div className={\"main\"} style={{width: \"100%\", height: \"100%\", backgroundColor: \"white\"}} >\r\n                <Grid container justify={\"center\"} style={{display: \"flex\", position: \"relative\"}}>\r\n                    <Grid item xs={12} container spacing={0} justify={\"center\"}>\r\n                        <Grid item xs={12} style={{backgroundColor: \"#212529\"}}>\r\n                            <Paper style={{ padding: \"15px\",width: \"100%\", textAlign: \"center\",backgroundColor: \"#212529\", color: \"white\", margin: \"0\", boxShadow: \"3px 3px 9px rgba(0,0,0,0.3)\"}}>\r\n                                <Typography variant={\"h5\"} style={{display: \"inline-block\"}}> Corona Virus (Covid-19) Outbreak of India </Typography>\r\n                                <Link to={\"/\"} style={{display: \"inline-block\", float: \"right\"}}> World </Link>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid container item xs={10} justify={\"center\"} style={{margin: \"20px\", textAlign: \"center\", backgroundColor: \"white\"}} >\r\n                            {/*INDIA DATA*/}\r\n                            <div className={\"box-container-global\"}>\r\n                               <div className={\"title-container-global\"}>\r\n                                   <div className={\"title\"}>INDIA</div>\r\n                               </div>\r\n                               <div className={\"data-container-global\"}>\r\n                                   <div className={\"data-title\"}>Confirmed</div>\r\n                                   <div className={\"data-box\"}>\r\n                                       <div className={\"data\"} id={\"confirmed\"}>\r\n                                           {this.state.country[0].confirmed}\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                               <div className={\"data-container\"}>\r\n                                   <div className={\"data-title\"} >Recovered</div>\r\n                                   <div className={\"data-box\"}>\r\n                                       <div className={\"data\"} id={\"recovered\"}>\r\n                                           {this.state.country[0].recovered}\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                               <div className={\"data-container\"}>\r\n                                   <div className={\"data-title\"} >Deaths</div>\r\n                                   <div className={\"data-box\"}>\r\n                                       <div className={\"data\"} id={\"deaths\"}>\r\n                                           {this.state.country[0].deaths}\r\n                                       </div>\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={\"datatable-title\"}>\r\n                    <h2 className={\"datatable-header\"}>\r\n                        Confirmed Cases and Deaths by Country, Territory\r\n                    </h2>\r\n                </div>\r\n                <div className={\"datatable-container\"}>\r\n                    <div className={\"datatable-table\"}>\r\n                        <TableContainer className={\"datatable\"} component={Paper}>\r\n                            <Table aria-label=\"simple table\" style={{minWidth: \"650\"}}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>States/Union Territory</TableCell>\r\n                                        <TableCell align=\"center\">Confirmed Indian</TableCell>\r\n                                        <TableCell align=\"left\">Foreign</TableCell>\r\n                                        <TableCell align=\"center\">Recovered</TableCell>\r\n                                        <TableCell align=\"center\">Deaths</TableCell>\r\n                                        <TableCell align=\"center\">Active</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.indiaStates.data.regional.map(row => (\r\n                                        <TableRow key={row.loc}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.loc}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">{row[\"confirmedCasesIndian\"]}</TableCell>\r\n                                            <TableCell align=\"left\">{row[\"confirmedCasesForeign\"]}</TableCell>\r\n                                            <TableCell id={\"recovered\"} align=\"center\">{row[\"discharged\"]}</TableCell>\r\n                                            <TableCell id={\"deaths\"} align=\"center\">{row[\"deaths\"]}</TableCell>\r\n                                            <TableCell id={\"new-recovered\"} align=\"center\">\r\n                                                {\r\n                                                    (row[\"confirmedCasesIndian\"]+row[\"confirmedCasesForeign\"]) - (row[\"discharged\"] + row[\"deaths\"])\r\n                                                }\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </div>\r\n                <div className={\"footer\"}>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndiaStats;","import React, {Component} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n//CSS files\r\nimport \"../Components/SummaryData/DataContainers.css\";\r\nimport \"../App.css\";\r\nimport \"../Components/DataTable/dataTable.css\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Footer from \"../Components/Footer/footer\";\r\n\r\n\r\n\r\nclass UsaStats extends Component{\r\n\r\n    state = {\r\n        loading: true,\r\n        UsaStates: null,\r\n        country: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        //FETCH INDIA SUMMARY\r\n        const urlindia = \"https://api.coronatracker.com/v2/analytics/country\";\r\n        const response2 = await fetch(urlindia);\r\n        var data2 = await response2.json();\r\n\r\n        const countrydata = [];\r\n        //console.log(\"REACHED!!\");\r\n        if (data2) {\r\n            for (let i = 0; i < data2.length; i++) {\r\n                if (data2[i].countryCode.toString() === \"US\")\r\n                {\r\n                    countrydata.push(data2[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        //USA STATES DATA\r\n        const url = \"https://covidtracking.com/api/states\";\r\n        const response = await fetch(url);\r\n        let data = await response.json();\r\n        // ADDING State names according to US CODES\r\n        if (data) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (data[i].state.toString() === \"AL\")\r\n                {\r\n                    let StateName = \"Alabama\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"AK\")\r\n                {\r\n                    let StateName = \"Alaska\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"AZ\")\r\n                {\r\n                    let StateName = \"Arizona\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"AR\")\r\n                {\r\n                    let StateName = \"Arkansas\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"CA\")\r\n                {\r\n                    let StateName = \"California\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"CO\")\r\n                {\r\n                    let StateName = \"Colorado\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"CT\")\r\n                {\r\n                    let StateName = \"Connecticut\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"DE\")\r\n                {\r\n                    let StateName = \"Delaware\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"FL\")\r\n                {\r\n                    let StateName = \"Florida\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"GA\")\r\n                {\r\n                    let StateName = \"Georgia\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"HI\")\r\n                {\r\n                    let StateName = \"Hawaii\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"ID\")\r\n                {\r\n                    let StateName = \"Idaho\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"IL\")\r\n                {\r\n                    let StateName = \"Illinois\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"IN\")\r\n                {\r\n                    let StateName = \"Indiana\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"IA\")\r\n                {\r\n                    let StateName = \"Iowa\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"KS\")\r\n                {\r\n                    let StateName = \"Kansas\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"KY\")\r\n                {\r\n                    let StateName = \"Kentucky\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"LA\")\r\n                {\r\n                    let StateName = \"Louisiana\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"ME\")\r\n                {\r\n                    let StateName = \"Maine\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MD\")\r\n                {\r\n                    let StateName = \"Maryland\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MA\")\r\n                {\r\n                    let StateName = \"Massachusetts\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MI\")\r\n                {\r\n                    let StateName = \"Michigan\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MN\")\r\n                {\r\n                    let StateName = \"Minnesota\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MS\")\r\n                {\r\n                    let StateName = \"Mississippi\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MO\")\r\n                {\r\n                    let StateName = \"Missouri\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MT\")\r\n                {\r\n                    let StateName = \"Montana\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NE\")\r\n                {\r\n                    let StateName = \"Nebraska\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NV\")\r\n                {\r\n                    let StateName = \"Nevada\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NH\")\r\n                {\r\n                    let StateName = \"New Hampshire\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NJ\")\r\n                {\r\n                    let StateName = \"New Jersey\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NM\")\r\n                {\r\n                    let StateName = \"New Mexico\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NY\")\r\n                {\r\n                    let StateName = \"New York\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"NC\")\r\n                {\r\n                    let StateName = \"North Carolina\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"ND\")\r\n                {\r\n                    let StateName = \"North Dakota\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"OH\")\r\n                {\r\n                    let StateName = \"Ohio\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"OK\")\r\n                {\r\n                    let StateName = \"Oklahoma\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"OR\")\r\n                {\r\n                    let StateName = \"Oregon\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"PA\")\r\n                {\r\n                    let StateName = \"Pennslyvania\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"RI\")\r\n                {\r\n                    let StateName = \"Rhode Island\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"SC\")\r\n                {\r\n                    let StateName = \"South Carolina\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"SD\")\r\n                {\r\n                    let StateName = \"South Dakota\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"TN\")\r\n                {\r\n                    let StateName = \"Tennessee\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"TX\")\r\n                {\r\n                    let StateName = \"Texas\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"UT\")\r\n                {\r\n                    let StateName = \"Utah\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"VT\")\r\n                {\r\n                    let StateName = \"Vermont\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"VA\")\r\n                {\r\n                    let StateName = \"Virginia\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"WA\")\r\n                {\r\n                    let StateName = \"Washington\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"WV\")\r\n                {\r\n                    let StateName = \"West Virginia\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"WI\")\r\n                {\r\n                    let StateName = \"Wisconsin\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"WY\")\r\n                {\r\n                    let StateName = \"Wyoming\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"DC\")\r\n                {\r\n                    let StateName = \"District of Columbia\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"AS\")\r\n                {\r\n                    let StateName = \"American Samoa\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"GU\")\r\n                {\r\n                    let StateName = \"Guam\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"MP\")\r\n                {\r\n                    let StateName = \"Northern Mariana Islands\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"PR\")\r\n                {\r\n                    let StateName = \"Puerto Rico\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"UM\")\r\n                {\r\n                    let StateName = \"United State Minor Outlying Islands\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                else if (data[i].state.toString() === \"VI\")\r\n                {\r\n                    let StateName = \"Virgin Islands, U.S.\";\r\n                    data[i].StateName = StateName;\r\n                }\r\n                if(data[i].death === null)\r\n                {\r\n                    data[i].death = 0;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({UsaStates: data, country: countrydata, loading: false});\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.loading) return <CircularProgress style={{position: \"fixed\", top: \"50%\", left:\"50%\" }} color=\"secondary\" />;\r\n        if (this.state.loading) return <CircularProgress style={{position: \"fixed\", top: \"50%\", left:\"50%\" }} color=\"secondary\" />;\r\n\r\n        return(\r\n            <div className={\"main\"} style={{width: \"100%\", height: \"100%\", backgroundColor: \"white\"}} >\r\n                <Grid container justify={\"center\"} style={{display: \"flex\", position: \"relative\"}}>\r\n                    <Grid item xs={12} container spacing={0} justify={\"center\"}>\r\n                        <Grid item xs={12} style={{backgroundColor: \"#212529\"}}>\r\n                            <Paper style={{ padding: \"15px\",width: \"100%\", textAlign: \"center\",backgroundColor: \"#212529\", color: \"white\", margin: \"0\", boxShadow: \"3px 3px 9px rgba(0,0,0,0.3)\"}}>\r\n                                <Typography variant={\"h5\"} style={{display: \"inline-block\"}}> Corona Virus (Covid-19) Outbreak of USA </Typography>\r\n                                <Link to={\"/\"} style={{display: \"inline-block\", float: \"right\"}}> World </Link>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid container item xs={10} justify={\"center\"} style={{margin: \"20px\", textAlign: \"center\", backgroundColor: \"white\"}} >\r\n                            {/*USA DATA*/}\r\n                            <div className={\"box-container-global\"}>\r\n                                <div className={\"title-container-global\"}>\r\n                                    <div className={\"title\"}>USA</div>\r\n                                </div>\r\n                                <div className={\"data-container-global\"}>\r\n                                    <div className={\"data-title\"}>Confirmed</div>\r\n                                    <div className={\"data-box\"}>\r\n                                        <div className={\"data\"} id={\"confirmed\"}>\r\n                                            {this.state.country[0].confirmed}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"data-container\"}>\r\n                                    <div className={\"data-title\"} >Recovered</div>\r\n                                    <div className={\"data-box\"}>\r\n                                        <div className={\"data\"} id={\"recovered\"}>\r\n                                            {this.state.country[0].recovered}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={\"data-container\"}>\r\n                                    <div className={\"data-title\"} >Deaths</div>\r\n                                    <div className={\"data-box\"}>\r\n                                        <div className={\"data\"} id={\"deaths\"}>\r\n                                            {this.state.country[0].deaths}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={\"datatable-title\"}>\r\n                    <h2 className={\"datatable-header\"}>\r\n                        Confirmed Cases and Deaths by States\r\n                    </h2>\r\n                </div>\r\n                <div className={\"datatable-container\"}>\r\n                    <div className={\"datatable-table\"}>\r\n                        <TableContainer className={\"datatable\"} component={Paper}>\r\n                            <Table aria-label=\"simple table\" style={{minWidth: \"650\"}}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>States</TableCell>\r\n                                        <TableCell align=\"center\">Corona Positive</TableCell>\r\n                                        <TableCell align=\"center\">Deaths</TableCell>\r\n                                        <TableCell align=\"center\">Negative</TableCell>\r\n                                        <TableCell align=\"center\">Total</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.UsaStates.map(row => (\r\n                                        <TableRow key={row.StateName}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.StateName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">{row[\"positive\"]}</TableCell>\r\n                                            <TableCell id={\"deaths\"} align=\"center\">{row[\"death\"]}</TableCell>\r\n                                            <TableCell id={\"recovered\"} align=\"center\">{row[\"negative\"]}</TableCell>\r\n                                            <TableCell id={\"new-recovered\"} align=\"center\">{row[\"total\"]}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </div>\r\n                <div className={\"footer\"}>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsaStats;","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\n//Pages\nimport LandingPage from \"./Pages\";\nimport IndiaStats from \"./Pages/IndiaStats\";\nimport UsaStats from \"./Pages/UsaStats\";\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <Switch>\n            <Route exact path={\"/\"} component={LandingPage}/>\n            <Route exact path={\"/stats/india\"} component={IndiaStats}/>\n            <Route exact path={\"/stats/usa\"} component={UsaStats}/>\n            </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}