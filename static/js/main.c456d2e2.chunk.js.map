{"version":3,"sources":["Components/SummaryData/DataContainers.jsx","Components/DataTable/dataTable.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DataContainers","state","loading","content","fetch","response","json","data","this","setState","summaryStats","console","log","global","Fragment","className","id","confirmed","recovered","deaths","china","nonChina","Component","createData","name","calories","fat","carbs","protein","dataTable","props","onSort","bind","event","sortKey","sort","a","b","toString","localeCompare","Names","uniqueData","i","rawData","length","indexOf","push","date","split","time","j","Confirmed","parseInt","Recovered","Deaths","TableContainer","component","Paper","Table","aria-label","style","minWidth","TableHead","TableRow","TableCell","align","onClick","e","TableBody","map","row","key","scope","App","width","height","backgroundColor","Grid","container","justify","display","position","item","xs","spacing","padding","textAlign","color","margin","boxShadow","Typography","variant","alignContent","Alert","severity","AlertTitle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c456d2e2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Paper, Typography, Grid} from \"@material-ui/core\";\r\nimport './DataContainers.css';\r\n\r\nclass DataContainers extends Component{\r\n\r\n    state = {\r\n        loading: true,\r\n        content: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const url = \"https://coronavirus.m.pipedream.net/csse_covid_19_data/csse_covid_19_daily_reports\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({ content: data.summaryStats, loading: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) return <div>Loading...</div>;\r\n        if (this.state.loading) return <div>didn't get the Data</div>;\r\n\r\n        console.log(this.state.content.global);\r\n        return (\r\n            <React.Fragment>\r\n                {/*GLOBAL DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>GLOBAL</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.content.global.confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.content.global.recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.content.global.deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*CHINA DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>CHINA</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.content.china.confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.content.china.recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.content.china.deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*NON-CHINA DATA*/}\r\n                <div className={\"box-container\"}>\r\n                    <div className={\"title-container\"}>\r\n                        <div className={\"title\"}>NON-CHINA</div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Confirmed</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"confirmed\"}>\r\n                                {this.state.content.nonChina.confirmed}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Recovered</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"recovered\"}>\r\n                                {this.state.content.nonChina.recovered}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"data-container\"}>\r\n                        <div className={\"data-title\"} >Deaths</div>\r\n                        <div className={\"data-box\"}>\r\n                            <div className={\"data\"} id={\"deaths\"}>\r\n                                {this.state.content.nonChina.deaths}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataContainers;","import React, {Component} from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport './dataTable.css';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(\r\n        'Frozen yoghurt',\r\n        159,\r\n        6.0,\r\n        24,\r\n        4.0\r\n    ),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nclass dataTable extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onSort=this.onSort.bind(this);\r\n    }\r\n\r\n    state = {\r\n        loading: true,\r\n        content: []\r\n    };\r\n\r\n\r\n    onSort(event, sortKey){\r\n\r\n        const data = this.state.content;\r\n        console.log(sortKey + \":SortKey\");\r\n        data.sort((a,b) => a[sortKey].toString().localeCompare(b[sortKey]).toString());\r\n        this.setState({data});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const url = \"https://coronavirus.m.pipedream.net/csse_covid_19_data/csse_covid_19_daily_reports\";\r\n        const response = await fetch(url);\r\n        var data = await response.json();\r\n        var Names = [];\r\n        var uniqueData = [];\r\n        for(let i = 0; i < data.rawData.length; i++){\r\n            //console.log(\"Matching? :\" + data.rawData[i][\"Country/Region\"].toString());\r\n            //console.log(Names.indexOf(\"China\"));\r\n            //console.log(Names.indexOf(data.rawData[i][\"Country/Region\"]));\r\n            if(Names.indexOf(data.rawData[i][\"Country/Region\"]) === -1)\r\n            {\r\n                //console.log(\"Not Matched:\" + data.rawData[i][\"Country/Region\"]);\r\n                Names.push(data.rawData[i][\"Country/Region\"]);\r\n                let date = data.rawData[i]['Last Update'].split(\"T\")[0];\r\n                let time = data.rawData[i]['Last Update'].split(\"T\")[1];\r\n                data.rawData[i]['Last Update Date'] = date;\r\n                data.rawData[i]['Last Update Time'] = time;\r\n                uniqueData.push(data.rawData[i]);\r\n            }\r\n            else {\r\n                console.log(uniqueData[0]);\r\n                for(var j=0; j<=uniqueData.length-1; j++) {\r\n                    console.log(\"uniqueData[j][\\\"Country/Region\\\"]\",uniqueData[j][\"Country/Region\"]);\r\n                    console.log(\"data.rawData[i][\\\"Country/Region\\\"]\", data.rawData[i][\"Country/Region\"]);\r\n                    if(uniqueData[j][\"Country/Region\"] === data.rawData[i][\"Country/Region\"]) {\r\n                      console.log(\"matched\");\r\n                        uniqueData[j].Confirmed = parseInt(uniqueData[j].Confirmed) + parseInt(data.rawData[i].Confirmed);\r\n                        uniqueData[j].Recovered = parseInt(uniqueData[j].Recovered) + parseInt(data.rawData[i].Recovered);\r\n                        uniqueData[j].Deaths = parseInt(uniqueData[j].Deaths) + parseInt(data.rawData[i].Deaths);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //var obj = JSON.parse(data);\r\n\r\n        // var newObj = {};\r\n        // for(let i in data['rawData']){\r\n        //     var item = data['rawData'][i];\r\n        //     if(newObj[item[\"Country/Region\"]] === undefined){\r\n        //         newObj[item[\"Country/Region\"]] = 0;\r\n        //     }\r\n        //     newObj[item[\"Country/Region\"]] += item[\"Confirmed\"];\r\n        // }\r\n        //\r\n        // var result = {};\r\n        // result.rawData = [];\r\n        // for(let i in newObj){\r\n        //     result.rawData.push({'Country/Region':i,'Confirmed ':newObj[i]});\r\n        // }\r\n        // console.log(result);\r\n        console.log(uniqueData);\r\n\r\n        this.setState({ content: uniqueData, loading: false });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.loading) return <div>Loading...</div>;\r\n        if (this.state.loading) return <div>didn't get the Data</div>;\r\n        console.log(this.state.content[1][\"Country/Region\"]);\r\n        return (\r\n            <div className={\"datatable-table\"}>\r\n                <TableContainer className={\"datatable\"} component={Paper}>\r\n                    <Table aria-label=\"simple table\" style={{minWidth: \"650\"}}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Country</TableCell>\r\n                                <TableCell align=\"right\" onClick={e => this.onSort(e, 'Confirmed')}>Confirmed</TableCell>\r\n                                <TableCell align=\"right\" onClick={e => this.onSort(e, 'Deaths')}>Deaths</TableCell>\r\n                                <TableCell align=\"right\" onClick={e => this.onSort(e, 'Recovered')}>Recovered</TableCell>\r\n                                <TableCell align=\"right\">Last Updated Date</TableCell>\r\n                                <TableCell align=\"right\">Last Updated Time</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.content.map(row => (\r\n                                <TableRow key={row[\"Country/Region\"]}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row[\"Country/Region\"]}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row[\"Confirmed\"]}</TableCell>\r\n                                    <TableCell id={\"deaths\"} align=\"right\">{row[\"Deaths\"]}</TableCell>\r\n                                    <TableCell id={\"recovered\"} align=\"right\">{row[\"Recovered\"]}</TableCell>\r\n                                    <TableCell align=\"right\">{row[\"Last Update Date\"]}</TableCell>\r\n                                    <TableCell align=\"right\">{row[\"Last Update Time\"]}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n\r\n    };\r\n}\r\nexport default dataTable;\r\n","import React, {Component} from 'react';\nimport {Grid, Paper, Typography} from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport './App.css';\nimport DataContainer from \"./Components/SummaryData/DataContainers\";\nimport DataTable from \"./Components/DataTable/dataTable\";\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div className={\"main\"} style={{width: \"100%\", height: \"100%\", backgroundColor: \"white\"}} >\n          <Grid container justify={\"center\"} style={{display: \"flex\", position: \"relative\"}}>\n            <Grid item xs={12} container spacing={0} justify={\"center\"}>\n              <Grid item xs={12} style={{backgroundColor: \"#212529\"}}>\n                  <Paper style={{ padding: \"15px\",width: \"100%\", textAlign: \"center\",backgroundColor: \"#212529\", color: \"white\", margin: \"0\", boxShadow: \"3px 3px 9px rgba(0,0,0,0.3)\"}}>\n                    <Typography variant={\"h5\"}> Corona Virus (Covid-19) Outbreak of World </Typography>\n                  </Paper>\n              </Grid>\n                <div style={{width: \"100%\", alignContent: \"center\", padding: \"20px\"}}>\n                    <Alert severity=\"error\">\n                        <AlertTitle>Slow?</AlertTitle>\n                        There may be intermittent outage due to the high number\n                        of users. We are giving our best to keep up with this\n                        high demand. Sorry for Inconvenience.\n                    </Alert>\n                </div>\n              <Grid container item xs={10} justify={\"center\"} style={{margin: \"20px\", textAlign: \"center\", backgroundColor: \"white\"}} >\n                <DataContainer/>\n              </Grid>\n            </Grid>\n          </Grid>\n            <div className={\"datatable-title\"}>\n                <h2 className={\"datatable-header\"}>\n                    Confirmed Cases and Deaths by Country, Territory\n                </h2>\n            </div>\n          <div className={\"datatable-container\"}>\n            <DataTable/>\n          </div>\n          <div className={\"footer\"}>\n            <div className={\"footer-content\"}>\n              <div className={\"footer-title\"}>DISCLAIMER</div>\n              <div className={\"footer-data\"}>\n                @Website is a privately owned website that\n                is not owned or operated by any state or federal government\n                agency. We have compiled these data using public information\n                available in National/Local Media and Information released by\n                State/Federal Agencies (CDC, DHS). Provided Information may not be\n                accurate. Please refer to CDC for any official information. contact\n                us at admin@Website for any other inquiries.\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}